name: Roblox Player Watcher

on:
  schedule:
    - cron: "*/5 * * * *"  # every 5 minutes
  workflow_dispatch:        # allow manual run

jobs:
  check-player:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run watcher
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
          PLACE_ID: ${{ secrets.PLACE_ID }}
          TARGET_USER_ID: ${{ secrets.TARGET_USER_ID }}
        run: |
          python - <<'EOF'
          import requests, os, json, time

          place_id = os.environ["PLACE_ID"]
          target_id = int(os.environ["TARGET_USER_ID"])
          webhook = os.environ["WEBHOOK_URL"]

          base_url = f"https://games.roblox.com/v1/games/{place_id}/servers/Public?sortOrder=Asc&limit=100"
          cursor = None
          found = False

          while True:
              url = base_url + (f"&cursor={cursor}" if cursor else "")
              r = requests.get(url)
              data = r.json()
              for server in data.get("data", []):
                  for player in server.get("players", []):
                      if player["id"] == target_id:
                          found = True
                          break
                  if found:
                      break
              cursor = data.get("nextPageCursor")
              if not cursor or found:
                  break
              time.sleep(0.5)  # prevent rate limit

          print("Found:", found)
          msg = {"content": f"<@YOUR_DISCORD_ID> Player is online!"} if found else {"content": "üïµÔ∏è Player still offline."}
          requests.post(webhook, json=msg)
          EOF
